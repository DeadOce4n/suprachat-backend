import click
import json
import sys
from flask.cli import with_appcontext
from pymongo import MongoClient
from pymongo.errors import DuplicateKeyError
from dotenv import load_dotenv
from datetime import datetime


def find_users(file: str) -> list[dict]:
    """
    Finds users registered on a BuntDB database file generated by ergo IRCd and
    register them into a MongoDB database.

    Args:
        file: The BuntDB file to look into.

    Returns:
        A list containing a dictionary of every user found and their data.
    """
    try:
        found_users = []
        with open(file) as f:
            lines = list(map(lambda line: line.strip(), f.readlines()))
            found_nicks = []
            for index, line in enumerate(lines):
                if line.startswith("account.credentials"):
                    nick = line.split(" ")[1]
                    if nick in found_nicks:
                        continue
                    else:
                        print(f"User found: {nick}")
                        found_nicks.append(nick)
                        password_hash = json.loads(lines[index + 2])["PassphraseHash"]
                        user = {"nick": nick, "password_hash": password_hash}
                        if user not in found_users:
                            found_users.append(user)

            for index, line in enumerate(lines):
                if line.startswith("account.registered.time"):
                    nick = line.split(" ")[1]
                    for user in found_users:
                        if (
                            nick == user["nick"]
                            and "registered_date" not in user.keys()
                        ):
                            timestamp = float(lines[index + 2].strip()[0:10])
                            user["registered_date"] = datetime.fromtimestamp(
                                timestamp
                            ).isoformat()
    except FileNotFoundError:
        print("Please copy your ircd.db file to this same directory.")
        sys.exit(1)

    return found_users


def migrate():
    load_dotenv()
    db = MongoClient()
    users = db.suprachat.users
    found_users = find_users("./ircd.db")

    for user in found_users:
        try:
            users.insert_one(
                {
                    "nick": user["nick"],
                    "password": user["password_hash"],
                    "email": None,
                    "registered_date": user["registered_date"],
                    "password_from": "ergo",
                    "verified": True,
                    "active": True,
                    "country": None,
                    "about": None,
                }
            )
        except DuplicateKeyError:
            print(f"User {user['nick']} already exists in database, skipping...")


@click.command("bunt-to-mongo")
@with_appcontext
def migrate_command():
    migrate()
    click.echo("Copied users from BuntDB to MongoDB")


def init_app(app):
    app.cli.add_command(migrate_command)
